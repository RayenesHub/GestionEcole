{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/equipement.service\";\nimport * as i2 from \"ng2-charts\";\nexport class StatistiquesEquipementComponent {\n  constructor(equipementService) {\n    this.equipementService = equipementService;\n    this.stats = {};\n    this.labels = [];\n    this.data = [];\n    this.chartConfig = {\n      type: 'doughnut',\n      data: {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: ['#28a745', '#ffc107', '#dc3545'],\n          hoverOffset: 8\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'bottom',\n            labels: {\n              color: '#333',\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.equipementService.getStatistiquesParEtat().subscribe(data => {\n      this.stats = data;\n      this.labels = Object.keys(data);\n      this.data = Object.values(data);\n      this.chartConfig.data.labels = this.labels;\n      this.chartConfig.data.datasets[0].data = this.data;\n    });\n  }\n  static {\n    this.Éµfac = function StatistiquesEquipementComponent_Factory(t) {\n      return new (t || StatistiquesEquipementComponent)(i0.ÉµÉµdirectiveInject(i1.EquipementService));\n    };\n  }\n  static {\n    this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: StatistiquesEquipementComponent,\n      selectors: [[\"app-statistiques-equipement\"]],\n      decls: 7,\n      vars: 4,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"shadow\", \"p-4\"], [1, \"text-center\", \"mb-4\"], [1, \"d-flex\", \"justify-content-center\"], [2, \"max-width\", \"300px\", \"width\", \"100%\", \"height\", \"300px\"], [\"baseChart\", \"\", 3, \"data\", \"labels\", \"type\", \"options\"]],\n      template: function StatistiquesEquipementComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ÉµÉµtext(3, \" \\uD83D\\uDCCA Statistiques des \\u00C9quipements par \\u00C9tat \");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(4, \"div\", 3)(5, \"div\", 4);\n          i0.ÉµÉµelement(6, \"canvas\", 5);\n          i0.ÉµÉµelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(6);\n          i0.ÉµÉµproperty(\"data\", ctx.chartData)(\"labels\", ctx.chartLabels)(\"type\", ctx.chartType)(\"options\", ctx.chartOptions);\n        }\n      },\n      dependencies: [i2.BaseChartDirective],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["StatistiquesEquipementComponent","constructor","equipementService","stats","labels","data","chartConfig","type","datasets","backgroundColor","hoverOffset","options","responsive","plugins","legend","position","color","font","size","ngOnInit","getStatistiquesParEtat","subscribe","Object","keys","values","i0","ÉµÉµdirectiveInject","i1","EquipementService","selectors","decls","vars","consts","template","StatistiquesEquipementComponent_Template","rf","ctx","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµelement","ÉµÉµadvance","ÉµÉµproperty","chartData","chartLabels","chartType","chartOptions"],"sources":["C:\\Users\\Msi\\Desktop\\GestionEcole\\angular\\frontend\\src\\app\\statistiques-equipement\\statistiques-equipement.component.ts","C:\\Users\\Msi\\Desktop\\GestionEcole\\angular\\frontend\\src\\app\\statistiques-equipement\\statistiques-equipement.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartConfiguration } from 'chart.js';\nimport { EquipementService } from '../services/equipement.service';\n\n@Component({\n  selector: 'app-statistiques-equipement',\n  templateUrl: './statistiques-equipement.component.html'\n})\nexport class StatistiquesEquipementComponent implements OnInit {\n  stats: { [key: string]: number } = {};\n  labels: string[] = [];\n  data: number[] = [];\n\n  chartConfig: ChartConfiguration<'doughnut'> = {\n    type: 'doughnut',\n    data: {\n      labels: [],\n      datasets: [\n        {\n          data: [],\n          backgroundColor: ['#28a745', '#ffc107', '#dc3545'], // Vert, Jaune, Rouge\n          hoverOffset: 8\n        }\n      ]\n    },\n    options: {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            color: '#333',\n            font: {\n              size: 14\n            }\n          }\n        }\n      }\n    }\n  };\n\n  constructor(private equipementService: EquipementService) {}\n\n  ngOnInit() {\n    this.equipementService.getStatistiquesParEtat().subscribe(data => {\n      this.stats = data;\n      this.labels = Object.keys(data);\n      this.data = Object.values(data);\n\n      this.chartConfig.data.labels = this.labels;\n      this.chartConfig.data.datasets[0].data = this.data;\n    });\n  }\n}\n\n","<div class=\"container mt-5\">\n    <div class=\"card shadow p-4\">\n      <h3 class=\"text-center mb-4\">\n        ðŸ“Š Statistiques des Ã‰quipements par Ã‰tat\n      </h3>\n      <div class=\"d-flex justify-content-center\">\n        <!-- Ici on dÃ©finit une largeur maximale plus petite et une hauteur fixe via style inline -->\n        <div style=\"max-width: 300px; width: 100%; height: 300px;\">\n          <canvas baseChart\n                  [data]=\"chartData\"\n                  [labels]=\"chartLabels\"\n                  [type]=\"chartType\"\n                  [options]=\"chartOptions\">\n          </canvas>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":";;;AAQA,OAAM,MAAOA,+BAA+B;EAiC1CC,YAAoBC,iBAAoC;IAApC,KAAAA,iBAAiB,GAAjBA,iBAAiB;IAhCrC,KAAAC,KAAK,GAA8B,EAAE;IACrC,KAAAC,MAAM,GAAa,EAAE;IACrB,KAAAC,IAAI,GAAa,EAAE;IAEnB,KAAAC,WAAW,GAAmC;MAC5CC,IAAI,EAAE,UAAU;MAChBF,IAAI,EAAE;QACJD,MAAM,EAAE,EAAE;QACVI,QAAQ,EAAE,CACR;UACEH,IAAI,EAAE,EAAE;UACRI,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;UAClDC,WAAW,EAAE;SACd;OAEJ;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE,QAAQ;YAClBX,MAAM,EAAE;cACNY,KAAK,EAAE,MAAM;cACbC,IAAI,EAAE;gBACJC,IAAI,EAAE;;;;;;KAMjB;EAE0D;EAE3DC,QAAQA,CAAA;IACN,IAAI,CAACjB,iBAAiB,CAACkB,sBAAsB,EAAE,CAACC,SAAS,CAAChB,IAAI,IAAG;MAC/D,IAAI,CAACF,KAAK,GAAGE,IAAI;MACjB,IAAI,CAACD,MAAM,GAAGkB,MAAM,CAACC,IAAI,CAAClB,IAAI,CAAC;MAC/B,IAAI,CAACA,IAAI,GAAGiB,MAAM,CAACE,MAAM,CAACnB,IAAI,CAAC;MAE/B,IAAI,CAACC,WAAW,CAACD,IAAI,CAACD,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1C,IAAI,CAACE,WAAW,CAACD,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAI,GAAG,IAAI,CAACA,IAAI;IACpD,CAAC,CAAC;EACJ;;;uBA5CWL,+BAA+B,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA;IAAA;EAAA;;;YAA/B5B,+BAA+B;MAAA6B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,yCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR5CV,EAAA,CAAAY,cAAA,aAA4B;UAGpBZ,EAAA,CAAAa,MAAA,qEACF;UAAAb,EAAA,CAAAc,YAAA,EAAK;UACLd,EAAA,CAAAY,cAAA,aAA2C;UAGvCZ,EAAA,CAAAe,SAAA,gBAKS;UACXf,EAAA,CAAAc,YAAA,EAAM;;;UALId,EAAA,CAAAgB,SAAA,GAAkB;UAAlBhB,EAAA,CAAAiB,UAAA,SAAAN,GAAA,CAAAO,SAAA,CAAkB,WAAAP,GAAA,CAAAQ,WAAA,UAAAR,GAAA,CAAAS,SAAA,aAAAT,GAAA,CAAAU,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}